<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>SQL on Byte Prince</title>
    <link>https://byteprince.com/tags/sql/</link>
    <description>Recent content in SQL on Byte Prince</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Jul 2022 18:02:30 +0800</lastBuildDate><atom:link href="https://byteprince.com/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一个有意思的SQL问题</title>
      <link>https://byteprince.com/posts/e44d6495/</link>
      <pubDate>Sun, 17 Jul 2022 18:02:30 +0800</pubDate>
      
      <guid>https://byteprince.com/posts/e44d6495/</guid>
      <description>前阵子，在工作中收到一个业务部门发起的取数工单，取数口径比较有意思。前阵子，因为其他事情比较忙，现在抽空记录一下问题。
部分业务背景已省略，简化问题如下：
 &amp;hellip;筛选连续三个月及以上有交易流水的用户&amp;hellip;
 这个问题看起来很简单，最笨蛋的方法无非就是筛选1,2,3,4,5,6,7,8,9,10,11,12月每个月有交易的用户，形成12个临时表，然后再暴力遍历。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  with tmp_1 as ( select cust_id from trx_act where trx_date between &amp;#39;2022-01-01&amp;#39; and &amp;#39;2022-01-31&amp;#39; group by cust_id ),tmp_2 as ( select cust_id from trx_act where trx_date between &amp;#39;2022-02-01&amp;#39; and &amp;#39;2022-02-29&amp;#39; group by cust_id ), .</description>
      <content:encoded><![CDATA[

<p>前阵子，在工作中收到一个业务部门发起的取数工单，取数口径比较有意思。前阵子，因为其他事情比较忙，现在抽空记录一下问题。</p>

<p>部分业务背景已省略，简化问题如下：</p>

<blockquote>
<p>&hellip;筛选连续三个月及以上有交易流水的用户&hellip;</p>
</blockquote>

<p>这个问题看起来很简单，最笨蛋的方法无非就是筛选1,2,3,4,5,6,7,8,9,10,11,12月每个月有交易的用户，形成12个临时表，然后再暴力遍历。</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#66d9ef">with</span> tmp_1 <span style="color:#66d9ef">as</span> (
  <span style="color:#66d9ef">select</span> cust_id 
  <span style="color:#66d9ef">from</span> trx_act
  <span style="color:#66d9ef">where</span> trx_date <span style="color:#66d9ef">between</span> <span style="color:#e6db74">&#39;2022-01-01&#39;</span> <span style="color:#66d9ef">and</span> <span style="color:#e6db74">&#39;2022-01-31&#39;</span>
  <span style="color:#66d9ef">group</span> <span style="color:#66d9ef">by</span> cust_id
),tmp_2 <span style="color:#66d9ef">as</span> (
  <span style="color:#66d9ef">select</span> cust_id 
  <span style="color:#66d9ef">from</span> trx_act
  <span style="color:#66d9ef">where</span> trx_date <span style="color:#66d9ef">between</span> <span style="color:#e6db74">&#39;2022-02-01&#39;</span> <span style="color:#66d9ef">and</span> <span style="color:#e6db74">&#39;2022-02-29&#39;</span>
  <span style="color:#66d9ef">group</span> <span style="color:#66d9ef">by</span> cust_id
),
.....
,tmp_12 <span style="color:#66d9ef">as</span> (
  <span style="color:#66d9ef">select</span> cust_id 
  <span style="color:#66d9ef">from</span> trx_act
  <span style="color:#66d9ef">where</span> trx_date <span style="color:#66d9ef">between</span> <span style="color:#e6db74">&#39;2022-12-01&#39;</span> <span style="color:#66d9ef">and</span> <span style="color:#e6db74">&#39;2022-12-31&#39;</span>
  <span style="color:#66d9ef">group</span> <span style="color:#66d9ef">by</span> cust_id
)





<span style="color:#66d9ef">select</span> a.cust_id 
<span style="color:#66d9ef">from</span> tmp_1 a 
<span style="color:#66d9ef">left</span> <span style="color:#66d9ef">join</span> tmp_2 b 
<span style="color:#66d9ef">on</span> a.cust_id <span style="color:#f92672">=</span> b.cust_id 
<span style="color:#66d9ef">left</span> <span style="color:#66d9ef">join</span> tmp_3 <span style="color:#66d9ef">c</span> 
<span style="color:#66d9ef">on</span> a.cust_id <span style="color:#f92672">=</span> <span style="color:#66d9ef">c</span>.cust_id 
<span style="color:#66d9ef">where</span> b.cust_id <span style="color:#66d9ef">is</span> <span style="color:#66d9ef">not</span> <span style="color:#66d9ef">null</span> <span style="color:#66d9ef">and</span> <span style="color:#66d9ef">c</span>.cust_id <span style="color:#66d9ef">is</span> <span style="color:#66d9ef">not</span> <span style="color:#66d9ef">null</span>


.....</code></pre></td></tr></table>
</div>
</div>
<p>当然，我这里又想出了两种比较好的方法：</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#75715e">-- 方法1
</span><span style="color:#75715e"></span><span style="color:#66d9ef">select</span> cust_id,action,<span style="color:#66d9ef">count</span>(<span style="color:#f92672">*</span>) <span style="color:#66d9ef">as</span> times 
<span style="color:#66d9ef">from</span> (
      <span style="color:#66d9ef">select</span> cust_id,action,(<span style="color:#66d9ef">month</span> <span style="color:#f92672">-</span> rank_num) <span style="color:#66d9ef">as</span> flag
      <span style="color:#66d9ef">from</span> ( 
        <span style="color:#66d9ef">select</span> cust_id,action,<span style="color:#66d9ef">month</span>,rank() over(partion <span style="color:#66d9ef">by</span> cust_id,action <span style="color:#66d9ef">order</span> <span style="color:#66d9ef">by</span> <span style="color:#66d9ef">month</span>) <span style="color:#66d9ef">as</span> rank_num
        <span style="color:#66d9ef">from</span> tbl 
        <span style="color:#66d9ef">group</span> <span style="color:#66d9ef">by</span> <span style="color:#66d9ef">month</span>,action,cust_id a
      )b
)
<span style="color:#66d9ef">group</span> <span style="color:#66d9ef">by</span> cust_id,action,flag
<span style="color:#66d9ef">having</span> times <span style="color:#f92672">&gt;=</span> <span style="color:#ae81ff">3</span>;

<span style="color:#75715e">-- 方法二
</span><span style="color:#75715e"></span><span style="color:#66d9ef">select</span> <span style="color:#66d9ef">distinct</span> cust_id,action 
<span style="color:#66d9ef">from</span> (
     <span style="color:#66d9ef">select</span> cust_id 
            ,action
            ,<span style="color:#66d9ef">month</span>
            ,lag(<span style="color:#66d9ef">month</span>,<span style="color:#ae81ff">2</span>) over(partition <span style="color:#66d9ef">by</span> cust_id,action <span style="color:#66d9ef">order</span> <span style="color:#66d9ef">by</span> <span style="color:#66d9ef">month</span>) <span style="color:#66d9ef">as</span> lag_2_month
     <span style="color:#66d9ef">from</span> tbl 
     <span style="color:#66d9ef">group</span> <span style="color:#66d9ef">by</span> <span style="color:#66d9ef">month</span>,cust,action 
)a 
<span style="color:#66d9ef">where</span> <span style="color:#66d9ef">month</span> <span style="color:#f92672">-</span> lag_2_month <span style="color:#f92672">=</span> <span style="color:#ae81ff">2</span>;  <span style="color:#75715e">-- 某一行的月份 - 前两行的月份的差值等于2</span></code></pre></td></tr></table>
</div>
</div>
<p>方法一在取一些连续n次行为的数据提取的时候很常用，原理就是将特定行为去重排序，取日期/月份和序号的差值作为计数器</p>

<blockquote>
<p>数学原理：</p>

<p>一般地，等差数列 {a<sub>n</sub>} = a<sub>1</sub>,a<sub>2</sub>,a<sub>3</sub>&hellip;&hellip; ,{b<sub>n</sub>} = b<sub>1</sub>,b<sub>2</sub>,b<sub>3</sub>&hellip;&hellip;</p>

<p>那么，{a<sub>n</sub>} - {b<sub>n</sub>} 就是一个常数数列。</p>
</blockquote>

<p>方法二的数学原理和方法一的数学原理差不多，差别在于方法二使用了一个 <code>lag()</code>窗口函数。</p>

<blockquote>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql">LAG(<span style="color:#f92672">&lt;</span>expression<span style="color:#f92672">&gt;</span>[,<span style="color:#66d9ef">offset</span>[, default_value]]) OVER (
    PARTITION <span style="color:#66d9ef">BY</span> expr,...
    <span style="color:#66d9ef">ORDER</span> <span style="color:#66d9ef">BY</span> expr [<span style="color:#66d9ef">ASC</span><span style="color:#f92672">|</span><span style="color:#66d9ef">DESC</span>],...
) </code></pre></td></tr></table>
</div>
</div></blockquote>

<h3 id="expression">expression</h3>

<p><code>LAG()</code>函数返回<code>expression</code>当前行之前的行的值，其值为<code>offset</code> 其分区或结果集中的行数。</p>

<h3 id="offset">offset</h3>

<p><code>offset</code>是从当前行返回的行数，以获取值。<code>offset</code>必须是零或文字正整数。如果<code>offset</code>为零，则<code>LAG()</code>函数计算<code>expression</code>当前行的值。如果未指定<code>offset</code>，则<code>LAG()</code>默认情况下函数使用一个。</p>

<h3 id="default-value">default_value</h3>

<p>如果没有前一行，则<code>LAG()</code>函数返回<code>default_value</code>。例如，如果offset为2，则第一行的返回值为<code>default_value</code>。如果省略<code>default_value</code>，则默认<code>LAG()</code>返回函数<code>NULL</code>。</p>

<h3 id="partition-by-子句"><code>PARTITION BY</code> 子句</h3>

<p><code>PARTITION BY</code>子句将结果集中的行划分<code>LAG()</code>为应用函数的分区。如果省略<code>PARTITION BY</code>子句，<code>LAG()</code>函数会将整个结果集视为单个分区。</p>

<h3 id="order-by-子句"><code>ORDER BY</code> 子句</h3>

<p><code>ORDER BY</code>子句指定在<code>LAG()</code>应用函数之前每个分区中的行的顺序。</p>

<p><code>LAG()</code>函数可用于计算当前行和上一行之间的差异。</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
