<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>启动选项 on Byte Prince</title>
    <link>https://byteprince.com/tags/%E5%90%AF%E5%8A%A8%E9%80%89%E9%A1%B9/</link>
    <description>Recent content in 启动选项 on Byte Prince</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 May 2021 15:29:55 +0800</lastBuildDate><atom:link href="https://byteprince.com/tags/%E5%90%AF%E5%8A%A8%E9%80%89%E9%A1%B9/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL进阶：启动选项和系统变量</title>
      <link>https://byteprince.com/posts/e50d7dqi/</link>
      <pubDate>Sun, 30 May 2021 15:29:55 +0800</pubDate>
      
      <guid>https://byteprince.com/posts/e50d7dqi/</guid>
      <description></description>
      <content:encoded><![CDATA[<h1 id="启动选项">启动选项</h1>

<p>MySQL 程序启动时指定的设置项成为<code>启动变量（startup option）</code>。</p>

<p>例如服务器允许同时连入的客户端的默认数量是151，表的默认存储引擎是<code>InnoDB</code>。</p>

<p>在 MySQL 安装目录的 bin 目录下的各种可执行文件（包括服务器相关的程序<code>mysqld</code>、<code>mysqld_safe</code>等，客户端相关程序<code>mysql</code>、<code>mysqladmin</code>等）基本都可以指定<code>启动选项</code>。</p>

<h2 id="指定选项的方法">指定选项的方法</h2>

<h3 id="1-命令行">1.命令行</h3>

<blockquote>
<p>只对当次启动有效。</p>
</blockquote>

<p><strong>进程通信设置：</strong>在启动服务器程序时禁止各客户端使用<code>TCP/IP</code>网络进行通信</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql">mysqld <span style="color:#f92672">--</span>skip<span style="color:#f92672">-</span>networking</code></pre></div>
<p>等价写法：(启动选项前添加<code>--</code>，启动选项由多个单词组成，之间添加<code>_</code>或者<code>-</code>)</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql">mysqld <span style="color:#f92672">--</span>skip_networking</code></pre></div>
<p>按照该命令启动服务器程序，再使用<code>mysql</code>来启动客户端程序，把服务器主机名指定为127.0.0.1的话会显示连接失败。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql">mysql <span style="color:#f92672">-</span>h127.<span style="color:#ae81ff">0</span>.<span style="color:#ae81ff">0</span>.<span style="color:#ae81ff">1</span> <span style="color:#f92672">-</span>uroot <span style="color:#f92672">-</span>p
Enter password:

ERROR <span style="color:#ae81ff">2003</span> (HY000):Can<span style="color:#e6db74">&#39;t connect to MySQL server on &#39;</span><span style="color:#ae81ff">127</span>.<span style="color:#ae81ff">0</span>.<span style="color:#ae81ff">0</span>.<span style="color:#ae81ff">1</span><span style="color:#e6db74">&#39;</span></code></pre></div>
<p><strong>存储引擎设置：</strong>在启动服务器程序时指定默认存储引擎</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql">mysqld <span style="color:#f92672">--</span><span style="color:#66d9ef">default</span><span style="color:#f92672">-</span>storage<span style="color:#f92672">-</span><span style="color:#66d9ef">engine</span><span style="color:#f92672">=</span>MyISAM</code></pre></div>
<p>然后在客户端程序连接到服务器程序后创建的表默认就是用启动选项中指定的类型。</p>

<p>可以使用以下命令查询表的结构（包括存储引擎）：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql"><span style="color:#66d9ef">SHOW</span> <span style="color:#66d9ef">CREATE</span> <span style="color:#66d9ef">TABLE</span> <span style="color:#960050;background-color:#1e0010">{</span>Table_name<span style="color:#960050;background-color:#1e0010">}</span>;</code></pre></div>
<p><strong>查看启动选项帮助信息：</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql">mysql <span style="color:#f92672">--</span>help
mysqld_safe <span style="color:#f92672">--</span>help
mysqld <span style="color:#f92672">--</span>verbose <span style="color:#f92672">--</span>help</code></pre></div>
<p><strong>总结</strong></p>

<ul>
<li><p>通用格式：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql">mysqld <span style="color:#f92672">--</span>option_1[<span style="color:#f92672">=</span>value_1] <span style="color:#f92672">--</span>optio_2[<span style="color:#f92672">=</span>value_2]  ...  <span style="color:#f92672">--</span>option_n[<span style="color:#f92672">=</span>value_n]</code></pre></div></li>

<li><p>某些选项不需要指定值，例如<code>skip-networking</code>等。</p></li>

<li><p>启动选项前添加<code>--</code>，启动选项由多个单词组成，之间添加<code>_</code>或者<code>-</code>。</p></li>

<li><p>选项名、<code>=</code>、选项值之间不可以由空白字符。</p></li>

<li><p>选项的长形式和短形式：</p></li>
</ul>

<table>
<thead>
<tr>
<th align="left">长形式</th>
<th>短形式</th>
<th>含义</th>
</tr>
</thead>

<tbody>
<tr>
<td align="left">&ndash;host</td>
<td>-h</td>
<td>主机名</td>
</tr>

<tr>
<td align="left">&ndash;user</td>
<td>-u</td>
<td>用户名</td>
</tr>

<tr>
<td align="left">&ndash;password</td>
<td>-p</td>
<td>密码</td>
</tr>

<tr>
<td align="left">&ndash;port</td>
<td>-P</td>
<td>端口</td>
</tr>

<tr>
<td align="left">&ndash;version</td>
<td>-V</td>
<td>版本信息</td>
</tr>
</tbody>
</table>

<p>短形式只需要添加一个短划线前缀</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql">mysqld <span style="color:#f92672">-</span>P <span style="color:#ae81ff">3306</span></code></pre></div>
<h3 id="2-配置文件">2.配置文件</h3>

<blockquote>
<p>在配置文件中，不同的选项组给不同的程序使用。其中，<code>[server]</code>组下面的启动选项作用于所有的服务器程序，<code>[client]</code>组下面的作用于所有的客户端程序。</p>
</blockquote>

<h4 id="2-1-配置文件路径">2.1 配置文件路径</h4>

<p>类 UNIX 操作系统中</p>

<table>
<thead>
<tr>
<th>路径名</th>
<th>备注</th>
</tr>
</thead>

<tbody>
<tr>
<td>/etc/my.conf</td>
<td></td>
</tr>

<tr>
<td>/etc/mysql/my.conf</td>
<td></td>
</tr>

<tr>
<td>SYSCONFDIR/my.cnf</td>
<td></td>
</tr>

<tr>
<td>$MYSQL_HOME/my.conf</td>
<td>特定于服务器的选项（仅限服务器）</td>
</tr>

<tr>
<td>defaults-extra-file</td>
<td>命令行指定的额外配置文件路径</td>
</tr>

<tr>
<td>~/.my.conf</td>
<td>特定于用户的选项</td>
</tr>

<tr>
<td>~/.mylogin.conf</td>
<td>特定于用户的登陆路径选项（仅限客户端）</td>
</tr>
</tbody>
</table>

<h4 id="2-2-配置文件的内容">2.2 配置文件的内容</h4>
<pre tabindex="0"><code>[server]
skip-networking
default-storage-engine=MyISAM

[mysqld]
.....

[mysqld_safe]
.....

[client]
.....

[mysql]
.....

[mysqladmin]
.....</code></pre>
<h4 id="2-3-程序的对应类别和能读取的组">2.3 程序的对应类别和能读取的组</h4>

<table>
<thead>
<tr>
<th>程序名</th>
<th>类别</th>
<th>能读取的组</th>
</tr>
</thead>

<tbody>
<tr>
<td>mysqld</td>
<td>启动服务器</td>
<td>[mysqld]、[server]</td>
</tr>

<tr>
<td>mysqld_safe</td>
<td>启动服务器</td>
<td>[mysqld]、[server]、[mysqld_safe]</td>
</tr>

<tr>
<td>mysql.server</td>
<td>启动服务器</td>
<td>[mysqld]、[server]、[mysql.server]</td>
</tr>

<tr>
<td>mysql</td>
<td>启动客户端</td>
<td>[mysql]、[client]</td>
</tr>

<tr>
<td>mysqladmin</td>
<td>启动客户端</td>
<td>[mysqladmin]、[client]</td>
</tr>

<tr>
<td>mysqldump</td>
<td>启动客户端</td>
<td>[mysqldump]、[client]</td>
</tr>
</tbody>
</table>

<h4 id="2-4-特定-mysql-版本的专用选项组">2.4 特定 MySQL 版本的专用选项组</h4>

<p>可以定义一个<code>[mysqld-5.7]</code>的选项组，含义和<code>[mysqld]</code>一样，不过只有版本号为 5.7 的<code>mysqld</code>程序才能使用这个选项组中的配置。</p>

<h4 id="2-5-配置文件的优先级">2.5 配置文件的优先级</h4>

<ul>
<li>MySQL 将在某些固定的路径下搜索配置文件（<mark>配置文件路径</mark>表中的顺序依次读取各个文件，越后面的文件优先级越高）</li>
<li>MySQL 也可以通过在命令行中指定<code>defaults-extra-file</code>启动选项来指定额外的配置文件路径</li>
</ul>

<h4 id="2-6-同一个配置文件中的优先级">2.6 同一个配置文件中的优先级</h4>

<p>越靠后的优先级越高。</p>

<h4 id="2-7-defaults-file-的使用">2.7 defaults-file 的使用</h4>

<ul>
<li><p>不搜索默认路径下的配置文件</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql">mysqld <span style="color:#f92672">--</span>defaults<span style="color:#f92672">-</span>file<span style="color:#f92672">=/</span>tmp<span style="color:#f92672">/</span>myconfig.txt</code></pre></div></li>

<li><p>搜索默认的配置文件路径</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql">mysqld <span style="color:#f92672">--</span>defaults<span style="color:#f92672">-</span>extra<span style="color:#f92672">-</span>file<span style="color:#f92672">=/</span>tmp<span style="color:#f92672">/</span>myconfig.txt</code></pre></div></li>
</ul>

<h3 id="3-命令行和配置文件中启动选项的优先级">3.命令行和配置文件中启动选项的优先级</h3>

<p><mark>命令行 &gt; 配置文件</mark></p>

<h1 id="系统变量">系统变量</h1>

<blockquote>
<p>大多数系统变量的值都可以在程序运行过程中修改，而无需停止并重启服务器。</p>
</blockquote>

<h2 id="查看系统变量">查看系统变量</h2>
<pre tabindex="0"><code>SHOW VARIABLES [LIKE 匹配的模式];</code></pre>
<p>如，查询以 default 开头的系统变量的值</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql"><span style="color:#66d9ef">SHOW</span> VARIABLES <span style="color:#66d9ef">LIKE</span> <span style="color:#e6db74">&#39;default%&#39;</span>;</code></pre></div>
<h2 id="设置系统变量">设置系统变量</h2>

<h3 id="通过命令行添加启动选项">通过命令行添加启动选项</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql">mysqld <span style="color:#f92672">--</span><span style="color:#66d9ef">default</span><span style="color:#f92672">-</span>storage<span style="color:#f92672">-</span><span style="color:#66d9ef">engine</span><span style="color:#f92672">=</span>MyISAM <span style="color:#f92672">--</span>maxconnections<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span></code></pre></div>
<h3 id="通过配置文件添加启动选项">通过配置文件添加启动选项</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql">[server]
<span style="color:#66d9ef">default</span><span style="color:#f92672">-</span>storage<span style="color:#f92672">-</span><span style="color:#66d9ef">engine</span><span style="color:#f92672">=</span>MyISAM
max<span style="color:#f92672">-</span>connections<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span></code></pre></div>
<blockquote>
<p>通常情况下，长变量之间建议使用<code>_</code>连接。对于⼤部分系统变量来说，它们的值可以在服务器程序运⾏过程中进⾏动态修改⽽⽆需停⽌并重启服务器。</p>
</blockquote>

<h3 id="系统变量的作用范围">系统变量的作用范围</h3>

<ul>
<li><strong>GLOBAL：</strong>全局变量，影响服务器的整体操作。</li>
<li><strong>SESSION：</strong>会话变量（可以理解为私有的系统变量），影响某个客户端连接的操作。（注：SESSION有个别名叫LOCAL）</li>
</ul>

<blockquote>
<p>在服务器启动时，会将每个全局变量初始化为其默认值（可以通过命令⾏或选项⽂件中指定的选项更改这些默认值）。然后服务器还为每个连接的客户端维护⼀组会话变量，客户端的会话变量在连接时使⽤相应全局变量的当前值初始化。这话有点⼉绕，还是以<code>default_storage_engine</code>举例，在服务器启动时会初始化⼀个名为<code>default_storage_engine</code>，作⽤范围为<code>GLOBAL</code>的系统变量。之后每当有⼀个客户端连接到该服务器时，服务器都会单独为该客户端分配⼀个名为<code>default_storage_engine</code>，作⽤范围为<code>SESSION</code>的系统变量，该作⽤范围为<code>SESSION</code>的系统变量值按照当前作⽤范围为<code>GLOBAL</code>的同名系统变量值进⾏初始化。</p>
</blockquote>

<h4 id="指定系统变量的作用范围">指定系统变量的作用范围</h4>
<pre tabindex="0"><code>SET [GLOBAL|SESSION] 系统变量名 = 值;</code></pre>
<p>或者</p>
<pre tabindex="0"><code>SET [@@(GLOBAL|SESSION).]var_name = XXX;</code></pre>
<p>例如，需要修改<code>default_storage_engine</code>变量的值，</p>

<p><strong>全局变量</strong>的修改：</p>
<pre tabindex="0"><code>语句⼀：SET GLOBAL default_storage_engine = MyISAM;
语句⼆：SET @@GLOBAL.default_storage_engine = MyISAM;</code></pre>
<p><strong>会话变量</strong>的修改：</p>
<pre tabindex="0"><code>语句⼀：SET SESSION default_storage_engine = MyISAM;
语句⼆：SET @@SESSION.default_storage_engine = MyISAM;
语句三：SET default_storage_engine = MyISAM;</code></pre>
<blockquote>
<p>SET 系统变量名 = 值  &lt;=&gt; SET SESSION 系统变量名 = 值</p>
</blockquote>

<h4 id="查看不同作用范围的系统变量">查看不同作用范围的系统变量</h4>
<pre tabindex="0"><code>SHOW [GLOBAL|SESSION] VARIABLES [LIKE 匹配的模式];</code></pre>
<p>例如：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-mysql" data-lang="mysql"><span style="color:#66d9ef">SHOW</span> SESSION VARIABLES <span style="color:#66d9ef">LIKE</span> <span style="color:#e6db74">&#39;default_storage_engine&#39;</span>;
<span style="color:#66d9ef">SHOW</span> GLOBAL VARIABLES <span style="color:#66d9ef">LIKE</span> <span style="color:#e6db74">&#39;default_storage_engine&#39;</span>;</code></pre></div>
<blockquote>
<p>1.如果某个客户端改变了某个系统变量在<code>GLOBAL</code>作⽤范围的值，并不会影响该系统变量在当前已经连接的客户端作⽤范围<code>SESSION</code>的值，只会影响后续连⼊的客户端在作⽤范围为<code>SESSION</code>的值。</p>

<p>2.并不是所有系统变量都具有<code>GLOBAL</code>和SESSION的作⽤范围</p>

<p>有⼀些系统变量只具有<code>GLOBAL</code>作⽤范围，比如<code>max_connections</code>，表示服务器程序⽀持同时最多有多少个客户端程序进⾏连接。有⼀些系统变量只具有<code>SESSION</code>作⽤范围，⽐如<code>insert_id</code>，表示插⼊值时使⽤的<code>AUTO_INCREMENT</code>修饰的列的值。有⼀些系统变量的值既具有GLOBAL作⽤范围，也具有<code>SESSION</code>作⽤范围，⽐如我们前边⽤到的<code>default_storage_engine</code>，⽽且其实⼤部分的系统变量都是这样的，</p>

<p>3.有些系统变量是只读的，并不能设置值，如<code>version</code>。</p>

<p>4.系统变量和启动选项的关系</p>

<p><img src="https://img.xiehestudio.com/pic_go/20210619212230.png" alt="" /></p>

<p>有些系统变量是在程序运⾏过程中⾃动⽣成的，是不可以当作启动选项来设置，⽐如<code>auto_increment_offset</code>、<code>character_set_client</code>。有些启动选项也不是系统变量，⽐如<code>defaults-file</code>。</p>
</blockquote>

<h2 id="状态变量">状态变量</h2>

<p>⽤来显示服务器程序运⾏状况。与<strong>系统变量</strong>类似，状态变量也有<code>GLOBAL</code>和<code>SESSION</code>两个作⽤范围。</p>

<h3 id="查看状态变量">查看状态变量</h3>
<pre tabindex="0"><code>SHOW [GLOBAL|SESSION] STATUS [LIKE 匹配的模式];</code></pre>]]></content:encoded>
    </item>
    
  </channel>
</rss>
