<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>SSH on Byte Prince</title>
    <link>https://byteprince.com/tags/ssh/</link>
    <description>Recent content in SSH on Byte Prince</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Jun 2021 10:29:43 +0800</lastBuildDate><atom:link href="https://byteprince.com/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一次 Git 的失败记录</title>
      <link>https://byteprince.com/posts/b61c3883/</link>
      <pubDate>Thu, 10 Jun 2021 10:29:43 +0800</pubDate>
      
      <guid>https://byteprince.com/posts/b61c3883/</guid>
      <description></description>
      <content:encoded><![CDATA[<p><img src="https://img.xiehestudio.com/pic_go/20210610125143.png" alt="" /></p>

<p>遇到这种情况先检查是否是网络问题。</p>

<h2 id="第一个报错">第一个报错</h2>

<blockquote>
<p>ssh_exchange_identification: read: Connection reset by peer</p>
</blockquote>

<p>先是更新博客的时候发现 github 仓库失联了，在 Terminal 中尝试连接我的几个服务器，也出现<code>kex_exchange_identification: read: Connection reset</code>的问题，之前是配置了 SSH 密钥连接服务器的。综上，判断是 SSH 公钥有问题。</p>

<h3 id="解决方案">解决方案</h3>

<p><strong>1.重置本地公钥</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">ssh-keygen -t rsa -C <span style="color:#e6db74">&#34;zzzain46@gmail.com&#34;</span></code></pre></div>
<p>之后会有几次信息确认，默认的话按回车就可以顺利完成了。</p>

<p><strong>2.配置Github的密钥</strong></p>

<h2 id="第二个报错">第二个报错</h2>

<blockquote>
<p>fatal: refusing to merge unrelated histories</p>
</blockquote>

<p>这是在<code>git push</code> 和 <code>git pull</code>的时候会遇到的问题，原因是本地和远程分支没有取得关系。</p>

<h3 id="解决方法">解决方法</h3>

<p>在操作命令后面加<code>--allow-unrelated-histories</code>可以解决。例如：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">git merge master --allow-unrelated-histories</code></pre></div>
<p>或者</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">git pull origin master --allow-unrelated-histories</code></pre></div>
<h2 id="附">附</h2>

<p>检查本地和 Github 的 SSH 连接是否正常</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">ssh -T git@github.com</code></pre></div>
<p>查看 push 的方式</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">git remote -v</code></pre></div>
<p>移除原有的 push 方式</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">git remote rm origin</code></pre></div>
<p>添加新的 push 方式</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">git remote add origin git@github.com:BytePrince/BytePrince.github.io.git</code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>使用密钥登录服务器的配置</title>
      <link>https://byteprince.com/posts/65eb32e5/</link>
      <pubDate>Sun, 29 Nov 2020 14:49:08 +0800</pubDate>
      
      <guid>https://byteprince.com/posts/65eb32e5/</guid>
      <description></description>
      <content:encoded><![CDATA[<p>使用密码口令登录服务器会有两个问题：</p>

<ul>
<li>安全问题，容易产生口令泄漏等安全风险</li>
<li>口令较长，每次都需要输入口令较为繁琐</li>
</ul>

<p>基于此，总结下解决方案。</p>

<p>口令较长的问题可以用<code>sshpass</code>来解决每次都需要输入长密码的烦恼，<strong>但是使用<code>sshpass</code>是极其不安全的</strong>，因为所有系统上的用户在命令行中通过简单的 <code>ps</code> 命令就可看到密码。</p>

<p>所以，目前较为安全的<code>SSH登录</code>验证方式还是采用<code>密钥</code>登录。</p>

<h3 id="环境">环境</h3>

<ul>
<li>Win 10</li>
<li>CentOS 7</li>
<li>Windows Terminal等命令行工具</li>
</ul>

<h3 id="windows配置">Windows配置</h3>

<h4 id="生成ssh密钥">生成SSH密钥</h4>

<p>查看<code>用户目录/.ssh</code> 目录，如果有<code>id_rsa.pub</code>和<code>id_rsa</code>文件，则此步跳过。</p>

<p>否则执行以下命令生成密钥。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">ssh-keygen -t rsa</code></pre></div>
<p>其中<code>id_rsa.pub</code>为公钥，<code>id_rsa</code>为私钥。</p>

<h3 id="centos配置">CentOS配置</h3>

<h4 id="添加公钥">添加公钥</h4>

<p><strong>以<code>root</code>用户为例</strong>，其他用户操作类似，只需要将操作目录换成<code>目标用户</code>目录即可。如用户为<code>zhangsan</code>，则只需要将<code>~/</code>（即<code>/root/</code>）换成<code>/home/zhangsan/</code>就可以。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">mkdir ~/.ssh
touch ~/.ssh/authorized_keys</code></pre></div>
<p>上传在<code>Win10</code> 生成的<code>公钥文件</code>到 <code>CentOS</code> 并追加内容到 <code>authorized_keys</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">scp .<span style="color:#ae81ff">\i</span>d_rsa.pub root@192.168.0.2:~/
cat ~/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys
rm ~/id_rsa.pub</code></pre></div>
<h4 id="重启ssh">重启SSH</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">systemctl restart sshd</code></pre></div>
<h4 id="修改目录权限">修改目录权限</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">chmod <span style="color:#ae81ff">700</span> ~/.ssh
chmod <span style="color:#ae81ff">600</span> ~/.ssh/authorized_keys</code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
