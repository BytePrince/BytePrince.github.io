<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>数据倾斜 on Byte Prince</title>
    <link>https://byteprince.com/tags/%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C/</link>
    <description>Recent content in 数据倾斜 on Byte Prince</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Mar 2023 20:31:32 +0800</lastBuildDate><atom:link href="https://byteprince.com/tags/%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hive优化之数据倾斜</title>
      <link>https://byteprince.com/posts/5fd5c870/</link>
      <pubDate>Wed, 29 Mar 2023 20:31:32 +0800</pubDate>
      
      <guid>https://byteprince.com/posts/5fd5c870/</guid>
      <description></description>
      <content:encoded><![CDATA[<h3 id="数据倾斜常见场景">数据倾斜常见场景</h3>

<ul>
<li>表表关联

<ul>
<li>大小表关联</li>
<li>大表间关联（转化为大小表关联问题）</li>
<li>关联键含大量空值</li>
<li>关联键数据类型不一致</li>
</ul></li>
<li>Group by逻辑</li>
<li>count(distinct)：<code>set hive.cbo.enable = true</code></li>
</ul>

<h4 id="1-大小表关联-mapjoin参数">1.大小表关联-mapjoin参数</h4>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#66d9ef">create</span> <span style="color:#66d9ef">table</span> DB_NAME.TB_NAME <span style="color:#66d9ef">as</span>
<span style="color:#66d9ef">with</span> tmp_xxx <span style="color:#66d9ef">as</span>(

<span style="color:#66d9ef">select</span>
     xxx.xxx
    ,xxx.yyy
    ,...
    ,row_number()over(partition <span style="color:#66d9ef">by</span> ... <span style="color:#66d9ef">desc</span>) <span style="color:#66d9ef">as</span> xxx
<span style="color:#66d9ef">from</span> DB_NAME.xxx <span style="color:#66d9ef">as</span> xxx
)
<span style="color:#66d9ef">select</span>
    a.xxx
   ,a.yyy
    ...
   ,b.biz_date
<span style="color:#66d9ef">from</span> DB_NAME.xxx_his a
<span style="color:#66d9ef">left</span> <span style="color:#66d9ef">outer</span> <span style="color:#66d9ef">join</span>(
<span style="color:#66d9ef">select</span>
    tmp_xxx.xxx
    ,tmp_xxx.yyy
    ...
    ,tmp xxx.id
<span style="color:#66d9ef">from</span> tmp_xxx
<span style="color:#66d9ef">where</span> tmp_xxx.id <span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
) b
<span style="color:#66d9ef">on</span> a.rtl_xxx_id <span style="color:#f92672">=</span> b.rtl_xxx_id
<span style="color:#66d9ef">left</span> <span style="color:#66d9ef">outer</span> <span style="color:#66d9ef">join</span> DB NAME.xxx_cls <span style="color:#66d9ef">c</span>
<span style="color:#66d9ef">on</span> b. prod_xxx_id <span style="color:#f92672">=</span> <span style="color:#66d9ef">c</span>.prod_xxx_id</code></pre></td></tr></table>
</div>
</div>
<p>在即席查询页面提交以上代码后，通过日志发现</p>

<p><img src="https://img.xiehestudio.com/uPic/image-20230329205451882.png" alt="image-20230329205451882" style="zoom: 50%;" /></p>

<p>在 525.23s 开始一直有一个节点长时间运行，此时其他所有节点都已经完成。推测发生了数据倾斜。</p>

<h5 id="数据探源">数据探源</h5>

<p>探查相应表信息 <code>DESC formatted 项目名.表名</code></p>

<p>发现表a数据量达30亿以上且为分区表，子查询结果b的数据量大10w+，表c为300+。</p>

<h5 id="查看关联键信息">查看关联键信息</h5>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#66d9ef">select</span>  <span style="color:#960050;background-color:#1e0010">关联键</span>,<span style="color:#66d9ef">count</span>(<span style="color:#ae81ff">1</span>) 
<span style="color:#66d9ef">from</span> <span style="color:#960050;background-color:#1e0010">表名</span> 
<span style="color:#66d9ef">where</span> 
<span style="color:#66d9ef">group</span> <span style="color:#66d9ef">by</span> <span style="color:#960050;background-color:#1e0010">关联键</span>
<span style="color:#66d9ef">having</span> <span style="color:#66d9ef">count</span>(<span style="color:#ae81ff">1</span>) <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">1</span> 
<span style="color:#66d9ef">order</span> <span style="color:#66d9ef">by</span> <span style="color:#66d9ef">count</span>(<span style="color:#ae81ff">1</span>) <span style="color:#66d9ef">desc</span></code></pre></td></tr></table>
</div>
</div>
<p>查到表a关联键的分布情况</p>

<table>
<thead>
<tr>
<th>00Axxx</th>
<th>1204325436</th>
</tr>
</thead>

<tbody>
<tr>
<td>53xxx</td>
<td>386342436</td>
</tr>

<tr>
<td>35xxx</td>
<td>465</td>
</tr>
</tbody>
</table>

<p>发现大小表关联时候关联键数量分布极其不均匀引起的，此时可以通过<strong>开启mapjoin参数</strong>进行优化。</p>

<ul>
<li><strong>set hive.auto.convert.join = true</strong></li>
</ul>

<p>原理：由Reduce Join调整为Map Join，使其在Map端完成链接，省去Reduce端步骤。避免了大量同一个关联键落到了同一节点的可能性。</p>

<ul>
<li><strong>增加hint关键字 <code>/* + mapjoin(表别名) */</code></strong></li>
</ul>

<p><strong>原理：</strong>将关键字内的表强行加载入内存进行操作。</p>

<p><strong>注意：</strong>不提倡将任何表都用hint关键字加载进内存，会造成内存溢出。</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#66d9ef">select</span> 
<span style="color:#75715e">/* + mapjoin(b,c) */</span>
a 
<span style="color:#66d9ef">left</span> <span style="color:#66d9ef">join</span> b 
<span style="color:#66d9ef">on</span> ...
<span style="color:#66d9ef">left</span> <span style="color:#66d9ef">join</span> <span style="color:#66d9ef">c</span> 
<span style="color:#66d9ef">on</span> ...</code></pre></td></tr></table>
</div>
</div>
<h4 id="2-关联键含有空值-空值打散或过滤">2.关联键含有空值-空值打散或过滤</h4>

<p>空值的特性</p>

<ul>
<li>空值字段作为关联键时，并不会参与链接</li>
<li>空值字段作为关联键时，拥有相同的key值，会被分发到同一任务节点</li>
</ul>

<p><img src="https://img.xiehestudio.com/uPic/image-20230329212438819.png" alt="image-20230329212438819" style="zoom:50%;" /></p>

<p>处理方式1：</p>

<p><strong>过滤空值。</strong>提前将数据按关联键是否为空拆成两部分，关联后再将两部分数据进行合并。</p>

<p>如有需要可以开启并行parallel参数，再直接使用union all合并。</p>

<p>parallel参数：<code>set hive.exc.parallel = true;</code>  &ndash; 默认为false</p>

<p>处理方式2：</p>

<p><strong>打散空值关联键</strong>，如图。</p>

<h4 id="3-关联键数据类型不一致-cast-函数">3.关联键数据类型不一致-cast()函数</h4>

<p>强制转化数据类型后可能会因为精度丢失等原因引发数据倾斜。</p>

<p>一般建议统一转换成string类型进行关联。</p>

<h4 id="4-group-by导致-skewindata参数">4.Group by导致-skewindata参数</h4>

<p><code>set hive.groupby.skewindata = true; --默认false</code></p>

<p><strong>skewindata参数：</strong></p>

<p>表现：由一个 Reducer 转变成两个Reducer。</p>

<p>第一个 Reducer 的作用：随机接收Map端输入的数据，达到负载均衡的目的。</p>

<p>第二个 Reducer 的作用：按照相同的 Groupby key，做最终聚合的操作。</p>

<p><strong>开启参数前：</strong></p>

<p><img src="https://img.xiehestudio.com/uPic/image-20230329213525836.png" alt="image-20230329213525836" style="zoom:67%;" /></p>

<p><strong>开启参数后：</strong></p>

<p><img src="https://img.xiehestudio.com/uPic/image-20230329213600568.png" alt="image-20230329213600568" style="zoom:67%;" /></p>

<p>在平时任务优化过程中发现，在执行速度上平均可以提升 80% 左右。</p>]]></content:encoded>
    </item>
    
  </channel>
</rss>
